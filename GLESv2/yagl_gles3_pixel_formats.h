/*
 * YaGL
 *
 * Copyright (c) 2012 Samsung Electronics Co., Ltd. All rights reserved.
 *
 * Contact :
 * Stanislav Vorobiov <s.vorobiov@samsung.com>
 * Jinhyung Jo <jinhyung.jo@samsung.com>
 * YeongKyoon Lee <yeongkyoon.lee@samsung.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * Contributors:
 * - S-Core Co., Ltd
 *
 */

#ifndef _YAGL_GLES3_PIXEL_FORMATS_H_
#define _YAGL_GLES3_PIXEL_FORMATS_H_

#include "yagl_pixel_format.h"

YAGL_PIXEL_FORMAT_DECL(gles3, GL_R8, GL_RED, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R8_SNORM, GL_RED, GL_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R16F, GL_RED, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R16F, GL_RED, GL_HALF_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R16F, GL_RED, GL_HALF_FLOAT_OES);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R32F, GL_RED, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R8UI, GL_RED_INTEGER, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R8I, GL_RED_INTEGER, GL_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R16UI, GL_RED_INTEGER, GL_UNSIGNED_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R16I, GL_RED_INTEGER, GL_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R32UI, GL_RED_INTEGER, GL_UNSIGNED_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R32I, GL_RED_INTEGER, GL_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG8, GL_RG, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG8_SNORM, GL_RG, GL_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG16F, GL_RG, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG16F, GL_RG, GL_HALF_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG16F, GL_RG, GL_HALF_FLOAT_OES);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG32F, GL_RG, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG8UI, GL_RG_INTEGER, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG8I, GL_RG_INTEGER, GL_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG16UI, GL_RG_INTEGER, GL_UNSIGNED_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG16I, GL_RG_INTEGER, GL_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG32UI, GL_RG_INTEGER, GL_UNSIGNED_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RG32I, GL_RG_INTEGER, GL_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB8, GL_RGB, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_SRGB8, GL_RGB, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB565, GL_RGB, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB565, GL_RGB, GL_UNSIGNED_SHORT_5_6_5);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB8_SNORM, GL_RGB, GL_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R11F_G11F_B10F, GL_RGB, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R11F_G11F_B10F, GL_RGB, GL_HALF_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R11F_G11F_B10F, GL_RGB, GL_HALF_FLOAT_OES);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_R11F_G11F_B10F, GL_RGB, GL_UNSIGNED_INT_10F_11F_11F_REV);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB9_E5, GL_RGB, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB9_E5, GL_RGB, GL_HALF_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB9_E5, GL_RGB, GL_HALF_FLOAT_OES);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB9_E5, GL_RGB, GL_UNSIGNED_INT_5_9_9_9_REV);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB16F, GL_RGB, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB16F, GL_RGB, GL_HALF_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB16F, GL_RGB, GL_HALF_FLOAT_OES);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB32F, GL_RGB, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB8UI, GL_RGB_INTEGER, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB8I, GL_RGB_INTEGER, GL_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB16UI, GL_RGB_INTEGER, GL_UNSIGNED_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB16I, GL_RGB_INTEGER, GL_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB32UI, GL_RGB_INTEGER, GL_UNSIGNED_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB32I, GL_RGB_INTEGER, GL_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA8, GL_RGBA, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_SRGB8_ALPHA8, GL_RGBA, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA8_SNORM, GL_RGBA, GL_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB5_A1, GL_RGBA, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB5_A1, GL_RGBA, GL_UNSIGNED_SHORT_5_5_5_1);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB5_A1, GL_RGBA, GL_UNSIGNED_INT_2_10_10_10_REV);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA4, GL_RGBA, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA4, GL_RGBA, GL_UNSIGNED_SHORT_4_4_4_4);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB10_A2, GL_RGBA, GL_UNSIGNED_INT_2_10_10_10_REV);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA16F, GL_RGBA, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA16F, GL_RGBA, GL_HALF_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA16F, GL_RGBA, GL_HALF_FLOAT_OES);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA32F, GL_RGBA, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA8UI, GL_RGBA_INTEGER, GL_UNSIGNED_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA8I, GL_RGBA_INTEGER, GL_BYTE);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGB10_A2UI, GL_RGBA_INTEGER, GL_UNSIGNED_INT_2_10_10_10_REV);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA16UI, GL_RGBA_INTEGER, GL_UNSIGNED_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA16I, GL_RGBA_INTEGER, GL_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA32UI, GL_RGBA_INTEGER, GL_UNSIGNED_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_RGBA32I, GL_RGBA_INTEGER, GL_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT, GL_UNSIGNED_SHORT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_DEPTH_COMPONENT16, GL_DEPTH_COMPONENT, GL_UNSIGNED_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_DEPTH_COMPONENT24, GL_DEPTH_COMPONENT, GL_UNSIGNED_INT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_DEPTH_COMPONENT32F, GL_DEPTH_COMPONENT, GL_FLOAT);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_DEPTH24_STENCIL8, GL_DEPTH_STENCIL, GL_UNSIGNED_INT_24_8);
YAGL_PIXEL_FORMAT_DECL(gles3, GL_DEPTH32F_STENCIL8, GL_DEPTH_STENCIL, GL_FLOAT_32_UNSIGNED_INT_24_8_REV);

#endif
