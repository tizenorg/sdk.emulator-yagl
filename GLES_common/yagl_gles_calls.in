# Draw/Read
void glDrawArrays(GLenum mode, GLint first, GLsizei count)
void glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
void glReadPixelsData(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
void glReadPixelsOffset(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei pixels)
void glDrawArraysInstanced(GLenum mode, GLint start, GLsizei count, GLsizei primcount)
void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)
void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
# VAOs
void glGenVertexArrays(const GLuint *arrays)
void glBindVertexArray(GLuint array)
# Arrays
void glDisableVertexAttribArray(GLuint index)
void glEnableVertexAttribArray(GLuint index)
void glVertexAttribPointerData(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLint first, const GLvoid *data)
void glVertexAttribPointerOffset(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLsizei offset)
void glVertexPointerData(GLint size, GLenum type, GLsizei stride, GLint first, const GLvoid *data)
void glVertexPointerOffset(GLint size, GLenum type, GLsizei stride, GLsizei offset)
void glNormalPointerData(GLenum type, GLsizei stride, GLint first, const GLvoid *data)
void glNormalPointerOffset(GLenum type, GLsizei stride, GLsizei offset)
void glColorPointerData(GLint size, GLenum type, GLsizei stride, GLint first, const GLvoid *data)
void glColorPointerOffset(GLint size, GLenum type, GLsizei stride, GLsizei offset)
void glTexCoordPointerData(GLint tex_id, GLint size, GLenum type, GLsizei stride, GLint first, const GLvoid *data)
void glTexCoordPointerOffset(GLint size, GLenum type, GLsizei stride, GLsizei offset)
void glDisableClientState(GLenum array)
void glEnableClientState(GLenum array)
void glVertexAttribDivisor(GLuint index, GLuint divisor)
void glVertexAttribIPointerData(GLuint index, GLint size, GLenum type, GLsizei stride, GLint first, const GLvoid *data)
void glVertexAttribIPointerOffset(GLuint index, GLint size, GLenum type, GLsizei stride, GLsizei offset)
# Buffers
void glGenBuffers(const GLuint *buffers)
void glBindBuffer(GLenum target, GLuint buffer)
void glBufferData(GLenum target, const GLvoid *data, GLenum usage)
void glBufferSubData(GLenum target, GLsizei offset, const GLvoid *data)
void glBindBufferBase(GLenum target, GLuint index, GLuint buffer)
void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLint offset, GLsizei size)
void glMapBuffer(GLuint buffer, const GLuint *ranges, GLvoid *data)
void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLint readOffset, GLint writeOffset, GLsizei size)
# Textures
void glGenTextures(const GLuint *textures)
void glBindTexture(GLenum target, GLuint texture)
void glActiveTexture(GLenum texture)
void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat &param)
void glGetTexParameteriv(GLenum target, GLenum pname, GLint &param)
void glTexImage2DData(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
void glTexImage2DOffset(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLsizei pixels)
void glTexParameterf(GLenum target, GLenum pname, GLfloat param)
void glTexParameterfv(GLenum target, GLenum pname, const GLfloat* params)
void glTexParameteri(GLenum target, GLenum pname, GLint param)
void glTexParameteriv(GLenum target, GLenum pname, const GLint* params)
void glTexSubImage2DData(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
void glTexSubImage2DOffset(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei pixels)
void glClientActiveTexture(GLenum texture)
void glTexEnvi(GLenum target, GLenum pname, GLint param)
void glTexEnvf(GLenum target, GLenum pname, GLfloat param)
void glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat tt, GLfloat r, GLfloat q)
void glTexEnviv(GLenum target, GLenum pname, const GLint *params)
void glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params)
void glGetTexEnviv(GLenum env, GLenum pname, GLint *params)
void glGetTexEnvfv(GLenum env, GLenum pname, GLfloat *params)
void glTexImage3DData(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)
void glTexImage3DOffset(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLsizei pixels)
void glTexSubImage3DData(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)
void glTexSubImage3DOffset(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei pixels)
void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
# Framebuffers
void glGenFramebuffers(const GLuint *framebuffers)
void glBindFramebuffer(GLenum target, GLuint framebuffer)
void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
void glDrawBuffers(const GLenum *bufs)
void glReadBuffer(GLenum mode)
void glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint *value)
void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint *value)
void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat *value)
# Renderbuffers
void glGenRenderbuffers(const GLuint *renderbuffers)
void glBindRenderbuffer(GLenum target, GLuint renderbuffer)
void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint &param)
void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
# Shaders
void glCreateProgram(GLuint program)
void glCreateShader(GLuint shader, GLenum type)
void glShaderSource(GLuint shader, const GLchar *string)
void glAttachShader(GLuint program, GLuint shader)
void glDetachShader(GLuint program, GLuint shader)
void glCompileShader(GLuint shader)
void glBindAttribLocation(GLuint program, GLuint index, const GLchar *name)
void glGetActiveAttrib(GLuint program, GLuint index, GLint &size, GLenum &type, GLchar *name)
void glGetActiveUniform(GLuint program, GLuint index, GLint &size, GLenum &type, GLchar *name)
int glGetAttribLocation(GLuint program, const GLchar *name)
void glGetProgramiv(GLuint program, GLenum pname, GLint &param)
GLboolean glGetProgramInfoLog(GLuint program, GLchar *infolog)
void glGetShaderiv(GLuint shader, GLenum pname, GLint &param)
GLboolean glGetShaderInfoLog(GLuint shader, GLchar *infolog)
void glGetUniformfv(GLboolean tl, GLuint program, uint32_t location, GLfloat *params)
void glGetUniformiv(GLboolean tl, GLuint program, uint32_t location, GLint *params)
int glGetUniformLocation(GLuint program, const GLchar *name)
void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params)
void glGetVertexAttribiv(GLuint index, GLenum pname, GLint *params)
void glLinkProgram(GLuint program, GLint *params)
void glUniform1f(GLboolean tl, uint32_t location, GLfloat x)
void glUniform1fv(GLboolean tl, uint32_t location, const GLfloat *v)
void glUniform1i(GLboolean tl, uint32_t location, GLint x)
void glUniform1iv(GLboolean tl, uint32_t location, const GLint *v)
void glUniform2f(GLboolean tl, uint32_t location, GLfloat x, GLfloat y)
void glUniform2fv(GLboolean tl, uint32_t location, const GLfloat *v)
void glUniform2i(GLboolean tl, uint32_t location, GLint x, GLint y)
void glUniform2iv(GLboolean tl, uint32_t location, const GLint *v)
void glUniform3f(GLboolean tl, uint32_t location, GLfloat x, GLfloat y, GLfloat z)
void glUniform3fv(GLboolean tl, uint32_t location, const GLfloat *v)
void glUniform3i(GLboolean tl, uint32_t location, GLint x, GLint y, GLint z)
void glUniform3iv(GLboolean tl, uint32_t location, const GLint *v)
void glUniform4f(GLboolean tl, uint32_t location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
void glUniform4fv(GLboolean tl, uint32_t location, const GLfloat *v)
void glUniform4i(GLboolean tl, uint32_t location, GLint x, GLint y, GLint z, GLint w)
void glUniform4iv(GLboolean tl, uint32_t location, const GLint *v)
void glUniformMatrix2fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
void glUniformMatrix3fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
void glUniformMatrix4fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
void glUseProgram(GLuint program)
void glValidateProgram(GLuint program)
void glVertexAttrib1f(GLuint indx, GLfloat x)
void glVertexAttrib1fv(GLuint indx, const GLfloat *values)
void glVertexAttrib2f(GLuint indx, GLfloat x, GLfloat y)
void glVertexAttrib2fv(GLuint indx, const GLfloat *values)
void glVertexAttrib3f(GLuint indx, GLfloat x, GLfloat y, GLfloat z)
void glVertexAttrib3fv(GLuint indx, const GLfloat *values)
void glVertexAttrib4f(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
void glVertexAttrib4fv(GLuint indx, const GLfloat *values)
void glGetActiveUniformsiv(GLuint program, const GLuint *uniformIndices, GLint *params)
void glGetUniformIndices(GLuint program, const GLchar *uniformNames, GLuint *uniformIndices)
GLuint glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName)
void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLchar *uniformBlockName)
void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)
void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params)
void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params)
void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w)
void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
void glVertexAttribI4iv(GLuint index, const GLint *v)
void glVertexAttribI4uiv(GLuint index, const GLuint *v)
void glGetUniformuiv(GLboolean tl, GLuint program, uint32_t location, GLuint *params)
void glUniform1ui(GLboolean tl, uint32_t location, GLuint v0)
void glUniform2ui(GLboolean tl, uint32_t location, GLuint v0, GLuint v1)
void glUniform3ui(GLboolean tl, uint32_t location, GLuint v0, GLuint v1, GLuint v2)
void glUniform4ui(GLboolean tl, uint32_t location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
void glUniform1uiv(GLboolean tl, uint32_t location, const GLuint *v)
void glUniform2uiv(GLboolean tl, uint32_t location, const GLuint *v)
void glUniform3uiv(GLboolean tl, uint32_t location, const GLuint *v)
void glUniform4uiv(GLboolean tl, uint32_t location, const GLuint *v)
void glUniformMatrix2x3fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
void glUniformMatrix2x4fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
void glUniformMatrix3x2fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
void glUniformMatrix3x4fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
void glUniformMatrix4x2fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
void glUniformMatrix4x3fv(GLboolean tl, uint32_t location, GLboolean transpose, const GLfloat *value)
int glGetFragDataLocation(GLuint program, const GLchar *name)
# State queries
void glGetIntegerv(GLenum pname, GLint *params)
void glGetFloatv(GLenum pname, GLfloat *params)
void glGetString(GLenum name, GLchar* str)
GLboolean glIsEnabled(GLenum cap)
# Transform feedbacks
void glGenTransformFeedbacks(const GLuint *ids)
void glBindTransformFeedback(GLenum target, GLuint id)
void glBeginTransformFeedback(GLenum primitiveMode)
void glEndTransformFeedback()
void glPauseTransformFeedback()
void glResumeTransformFeedback()
void glTransformFeedbackVaryings(GLuint program, const GLchar *varyings, GLenum bufferMode)
void glGetTransformFeedbackVaryings(GLuint program, GLsizei *sizes, GLenum *types)
# Queries
void glGenQueries(const GLuint *ids)
void glBeginQuery(GLenum target, GLuint id)
void glEndQuery(GLenum target)
GLboolean glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint &result)
# Samplers
void glGenSamplers(const GLuint *samplers)
void glBindSampler(GLuint unit, GLuint sampler)
void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param)
void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint *param)
void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param)
void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat *param)
# Misc
void glDeleteObjects(const GLuint *objects)
void glBlendEquation(GLenum mode)
void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)
void glBlendFunc(GLenum sfactor, GLenum dfactor)
void glBlendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
void glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
void glClear(GLbitfield mask)
void glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
void glClearDepthf(GLclampf depth)
void glClearStencil(GLint s)
void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
void glCullFace(GLenum mode)
void glDepthFunc(GLenum func)
void glDepthMask(GLboolean flag)
void glDepthRangef(GLclampf zNear, GLclampf zFar)
void glEnable(GLenum cap)
void glDisable(GLenum cap)
@void glFlush()
void glFrontFace(GLenum mode)
void glGenerateMipmap(GLenum target)
void glHint(GLenum target, GLenum mode)
void glLineWidth(GLfloat width)
void glPixelStorei(GLenum pname, GLint param)
void glPolygonOffset(GLfloat factor, GLfloat units)
void glScissor(GLint x, GLint y, GLsizei width, GLsizei height)
void glStencilFunc(GLenum func, GLint ref, GLuint mask)
void glStencilMask(GLuint mask)
void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)
void glSampleCoverage(GLclampf value, GLboolean invert)
void glViewport(GLint x, GLint y, GLsizei width, GLsizei height)
void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask)
void glStencilMaskSeparate(GLenum face, GLuint mask)
void glStencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)
void glPointSize(GLfloat size)
void glAlphaFunc(GLenum func, GLclampf ref)
void glMatrixMode(GLenum mode)
void glLoadIdentity()
void glPopMatrix()
void glPushMatrix()
void glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
void glTranslatef(GLfloat x, GLfloat y, GLfloat z)
void glScalef(GLfloat x, GLfloat y, GLfloat z)
void glOrthof(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
void glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
void glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
void glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz)
void glPointParameterf(GLenum pname, GLfloat param)
void glPointParameterfv(GLenum pname, const GLfloat *params)
void glFogf(GLenum pname, GLfloat param)
void glFogfv(GLenum pname, const GLfloat *params)
void glFrustumf(GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
void glLightf(GLenum light, GLenum pname, GLfloat param)
void glLightfv(GLenum light, GLenum pname, const GLfloat *params)
void glGetLightfv(GLenum light, GLenum pname, GLfloat *params)
void glLightModelf(GLenum pname, GLfloat param)
void glLightModelfv(GLenum pname, const GLfloat *params)
void glMaterialf(GLenum face, GLenum pname, GLfloat param)
void glMaterialfv(GLenum face, GLenum pname, const GLfloat *params)
void glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params)
void glShadeModel(GLenum mode)
void glLogicOp(GLenum opcode)
void glMultMatrixf(const GLfloat *m)
void glLoadMatrixf(const GLfloat *m)
void glClipPlanef(GLenum plane, const GLfloat *equation)
void glGetClipPlanef(GLenum pname, GLfloat *eqn)

#
# YaGL Extensions
#

void glUpdateOffscreenImageYAGL(GLuint texture, uint32_t width, uint32_t height, uint32_t bpp, const void *pixels)
void glGenUniformLocationYAGL(uint32_t location, GLuint program, const GLchar *name)
void glDeleteUniformLocationsYAGL(const uint32_t *locations)
